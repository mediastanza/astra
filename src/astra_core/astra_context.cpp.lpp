// This file is part of the Orbbec Astra SDK [https://orbbec3d.com]
// Copyright (c) 2015 Orbbec 3D
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// Be excellent to each other.
#include "astra_context.hpp"
#include "astra_context_impl.hpp"
#include "astra_create_stream_proxy.hpp"
#include "astra_cxx_compatibility.hpp"
#include <astra_core/capi/astra_streamservice_proxy.h>
#include <astra_core_api.h>

namespace astra {

    context::context()
          : impl_(astra::make_unique<context_impl>()),
            proxy_(create_stream_proxy(this))
            {}

    context::~context() {}

    astra_status_t context::initialize()
    {
        astra_api_set_proxy(proxy());
        return impl_->initialize();
    }

    astra_status_t context::terminate()
    {
        return impl_->terminate();
    }

    astra_streamservice_proxy_t* context::proxy()
    {
        return proxy_.get();
    }

^^^BEGINREPLACE:stream^^^
    ^RETURN^ context::^FUNC^(^PARAMS:ref^)
    {
        return impl_->^FUNC^(^PARAMS:names^);
    }

^^^ENDREPLACE^^^

    astra_status_t context::notify_host_event(astra_event_id id, const void* data, size_t dataSize)
    {
        return impl_->notify_host_event(id, data, dataSize);
    }
}
