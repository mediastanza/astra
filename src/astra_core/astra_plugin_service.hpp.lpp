/* ^^^AUTOGENHEADER^^^ */
// This file is part of the Orbbec Astra SDK [https://orbbec3d.com]
// Copyright (c) 2015 Orbbec 3D
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// Be excellent to each other.
#ifndef ASTRA_PLUGIN_SERVICE_H
#define ASTRA_PLUGIN_SERVICE_H

#include <astra_core/capi/astra_types.h>
#include <astra_core/capi/plugins/astra_plugin_callbacks.h>
#include <memory>

using CallbackId = size_t;

struct astra_pluginservice_proxy_t;

namespace astra
{
    class streamset;
    class streamset_catalog;
    class plugin_service_impl;

    class plugin_service
    {
    public:
        plugin_service(streamset_catalog& catalog);
        ~plugin_service();

        plugin_service(const plugin_service& service) = delete;
        plugin_service& operator=(const plugin_service& rhs) = delete;

        astra_pluginservice_proxy_t* proxy();
        void notify_host_event(astra_event_id id, const void* data, size_t dataSize);

^^^BEGINREPLACE:plugin^^^
        ^RETURN^ ^FUNC^(^PARAMS:ref^);
^^^ENDREPLACE^^^

    private:
        std::unique_ptr<plugin_service_impl> impl_;
        std::unique_ptr<astra_pluginservice_proxy_t> proxy_;
    };
}

#endif /* ASTRA_PLUGIN_SERVICE_H */
