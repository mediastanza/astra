/* ^^^AUTOGENHEADER^^^ */
// This file is part of the Orbbec Astra SDK [https://orbbec3d.com]
// Copyright (c) 2015 Orbbec 3D
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// Be excellent to each other.
#ifndef ASTRA_CONTEXT_H
#define ASTRA_CONTEXT_H

#include <astra_core/capi/astra_types.h>
#include <memory>

struct astra_streamservice_proxy_t;

namespace astra {

    class streamset;
    class streamset_catalog;
    class context_impl;

    class context
    {
    public:
        context();
        ~context();

        context& operator=(const context& rhs) = delete;
        context(const context& context) = delete;

        astra_status_t initialize();
        astra_status_t terminate();

^^^BEGINREPLACE:stream^^^
        ^RETURN^ ^FUNC^(^PARAMS:ref^);

^^^ENDREPLACE^^^
        astra_streamservice_proxy_t* proxy();

        astra_status_t notify_host_event(astra_event_id id, const void* data, size_t dataSize);

    private:
        std::unique_ptr<context_impl> impl_;
        std::unique_ptr<astra_streamservice_proxy_t> proxy_;
    };
}

#endif /* ASTRA_CONTEXT_H */
